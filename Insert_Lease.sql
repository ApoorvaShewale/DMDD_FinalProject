create or replace PROCEDURE INSERT_LEASE (L_ID1 IN number, fk_LEASE_P_ID1 IN number, fk_LEASE_C_ID1 IN number, L_STRTDATE1 IN DATE, L_ENDDATE1 IN DATE,L_STATUS1 IN VARCHAR,MON_RENT1 IN NUMBER, LEASE_BREAK_DATE1 IN DATE, L_PAY_DUEDATE1 IN DATE, DEPOSIT1 IN NUMBER,KEYFEE1 IN NUMBER,APPLICATION_FEE1 IN NUMBER,LATEFEE1 IN NUMBER,MISC1 IN NUMBER, SUBLEASING_ALLOWED1 IN VARCHAR) 
IS
    L_STATUS_INCORRECT EXCEPTION;
   -- SUBLEASING_ALLOWED_INCOREECT EXCEPTION;
    L_ENDDATE_INCORRECT EXCEPTION;


BEGIN
IF L_STATUS1 NOT IN ('Active','Completed','Broken') THEN 
    RAISE L_STATUS_INCORRECT;

ELSIF (L_ENDDATE1)<L_STRTDATE1 THEN 
    RAISE L_ENDDATE_INCORRECT;

ELSE   
    INSERT INTO LEASE(L_ID, fk_LEASE_P_ID,fk_LEASE_C_ID,L_STRTDATE,L_ENDDATE,L_STATUS,MON_RENT,LEASE_BREAK_DATE,L_PAY_DUEDATE,DEPOSIT,KEYFEE,APPLICATION_FEE,LATEFEE,MISC,SUBLEASING_ALLOWED) 
    values (L_ID_SEQ.nextval, fk_LEASE_P_ID1 ,fk_LEASE_C_ID1 ,L_STRTDATE1 ,L_ENDDATE1 ,L_STATUS1,MON_RENT1 ,LEASE_BREAK_DATE1 ,L_PAY_DUEDATE1 ,DEPOSIT1,KEYFEE1,APPLICATION_FEE1 ,LATEFEE1,MISC1 ,SUBLEASING_ALLOWED1);
    COMMIT;
    
END IF;

EXCEPTION 
    WHEN L_STATUS_INCORRECT THEN
                DBMS_OUTPUT.PUT_LINE('Lease Status can only be Active/completed/Broken');
   -- WHEN SUBLEASING_ALLOWED_INCOREECT THEN
    --            DBMS_OUTPUT.PUT_LINE('Please enter Yes or No for Subleasing allowed');
    WHEN L_ENDDATE_INCORRECT THEN
                DBMS_OUTPUT.PUT_LINE('Lease End date cannot be  only be before lease start date');

END;