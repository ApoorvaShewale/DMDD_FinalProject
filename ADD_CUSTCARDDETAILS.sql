CREATE OR REPLACE PROCEDURE ADD_CUSTCARDDETAILS(C_NUM IN NUMBER,CUST_ID IN NUMBER,EXP_DT DATE,C_TYPE VARCHAR,CUST_NAME VARCHAR,CVV_NUM IN NUMBER) IS 

CUST_ID_EXCEPTION EXCEPTION;
C_NUM_EXCEPTION EXCEPTION;
EXP_DT_EXCEPTION EXCEPTION;
CVV_NUM_EXCEPTION EXCEPTION;
MAX_CUST_CARD_ID NUMBER;
NEW_CUST_CARD_ID NUMBER;

BEGIN
SELECT NVL(MAX(CUSTOMER_CARD_ID),0) INTO MAX_CUST_CARD_ID FROM CUSTOMER_CARD_DETAIL; 
NEW_CUST_CARD_ID := MAX_CUST_CARD_ID +1;

IF LENGTH(CUST_ID)>11 THEN
    RAISE CUST_ID_EXCEPTION;
ELSIF LENGTH(C_NUM)>17 THEN
    RAISE C_NUM_EXCEPTION;
ELSIF EXP_DT < DATE '2021-12-07' THEN
    RAISE EXP_DT_EXCEPTION;
ELSIF LENGTH(CVV_NUM) < 3 OR LENGTH(CVV_NUM) > 4 THEN
    RAISE CVV_NUM_EXCEPTION;
ELSE
INSERT INTO customer_card_detail(CUSTOMER_CARD_ID,CARD_NUMBER,FK_C_ID,EXPIRY_DATE,CARD_TYPE,NAME_ON_CARD,CVV) VALUES (NEW_CUST_CARD_ID,C_NUM,CUST_ID,EXP_DT,C_TYPE,CUST_NAME,CVV_NUM);
COMMIT;
END IF;

EXCEPTION
    WHEN CUST_ID_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('CUSTOMER ID SHOULD BE LESS THAN 10 DIGITS');
    WHEN C_NUM_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('CARD NUMBER SHOULD BE OF 16 DIGITS');
    WHEN EXP_DT_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('EXPIRY DATE IS INCORRECT');
    WHEN CVV_NUM_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('CVV SHOULD BE OF 3 TO 4 DIGITS');
END;
        