create or replace PROCEDURE UPDATE_EMPLOYEE_DETAILS(EMP_ID IN NUMBER,
EMP_PHONE IN NUMBER,
EMP_EMAIL varchar,
EMP_STREET VARCHAR,
EMP_CITY VARCHAR,
EMP_STATE VARCHAR,
EMP_ZIP VARCHAR)

IS

EMP_ID_COUNT NUMBER;
EMP_PHONE_EXCEPTION EXCEPTION;
EMP_PHONE_LEN_EXCEPTION EXCEPTION;
EMP_EMAIL_EXCEPTION EXCEPTION;
EMP_ZIP_LEN_EXCEPTION EXCEPTION;
EMP_ZIP_EXCEPTION EXCEPTION;

BEGIN
    Select count(*) into EMP_ID_COUNT from EMPLOYEE where EMP_ID=EMPLOYEE.E_ID;
    IF EMP_ID_COUNT =0 THEN
        RAISE NO_DATA_FOUND;
    ELSIF is_number(EMP_PHONE)=0 THEN
        RAISE EMP_PHONE_EXCEPTION;
    ELSIF LENGTH(EMP_PHONE)<>10 THEN
        RAISE EMP_PHONE_LEN_EXCEPTION;
    ELSIF not REGEXP_LIKE(EMP_EMAIL, '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$') THEN
        RAISE EMP_EMAIL_EXCEPTION;
    ELSIF LENGTH(EMP_ZIP)<>5 THEN
        RAISE EMP_ZIP_LEN_EXCEPTION;
    ELSIF is_number(EMP_ZIP)=0 THEN
        RAISE EMP_ZIP_EXCEPTION;
    ELSE
        UPDATE EMPLOYEE SET E_CONTACT = EMP_PHONE, E_EMAIL = EMP_EMAIL, E_STREET=EMP_STREET, E_CITY=EMP_CITY, E_STATE=EMP_STATE, E_ZIPCODE=EMP_ZIP  WHERE EMPLOYEE.E_ID = EMP_ID;
        DBMS_OUTPUT.PUT_LINE('Employee Details - updated successfully');
    COMMIT;
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Employee - record not found ');
    WHEN EMP_PHONE_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('PHONE NUMBER SHOULD BE A NUMBER');
    WHEN EMP_PHONE_LEN_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('PHONE NUMBER SHOULD BE OF 10 DIGITS');
    WHEN EMP_EMAIL_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('EMAIL IS INVALID');
    WHEN EMP_ZIP_LEN_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('ZIPCODE SHOULD BE OF 5 DIGITS');
    WHEN EMP_ZIP_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('ZIPCODE SHOULD BE A NUMBER');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;