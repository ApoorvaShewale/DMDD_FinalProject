create or replace PROCEDURE UPDATE_OWNER_DETAILS(OWN_ID IN NUMBER,
OWN_PHONE IN NUMBER,
OWN_EMAIL varchar,
OWN_STREET VARCHAR,
OWN_CITY VARCHAR,
OWN_STATE VARCHAR,
OWN_ZIP VARCHAR)

IS

OWN_ID_COUNT NUMBER;
OWN_PHONE_EXCEPTION EXCEPTION;
OWN_PHONE_LEN_EXCEPTION EXCEPTION;
OWN_EMAIL_EXCEPTION EXCEPTION;
OWN_ZIP_LEN_EXCEPTION EXCEPTION;
OWN_ZIP_EXCEPTION EXCEPTION;

BEGIN
    Select count(*) into OWN_ID_COUNT from OWNER where OWN_ID=OWNER.O_ID;
    IF OWN_ID_COUNT =0 THEN
        RAISE NO_DATA_FOUND;
    ELSIF is_number(OWN_PHONE)=0 THEN
        RAISE OWN_PHONE_EXCEPTION;
    ELSIF LENGTH(OWN_PHONE)<>10 THEN
        RAISE OWN_PHONE_LEN_EXCEPTION;
    ELSIF not REGEXP_LIKE(OWN_EMAIL, '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$') THEN
        RAISE OWN_EMAIL_EXCEPTION;
    ELSIF LENGTH(OWN_ZIP)<>5 THEN
        RAISE OWN_ZIP_LEN_EXCEPTION;
    ELSIF is_number(OWN_ZIP)=0 THEN
        RAISE OWN_ZIP_EXCEPTION;
    ELSE
        UPDATE OWNER SET O_CONTACT = OWN_PHONE, O_EMAIL = OWN_EMAIL, O_STREET=OWN_STREET, O_CITY=OWN_CITY, O_STATE=OWN_STATE, O_ZIPCODE=OWN_ZIP  WHERE OWNER.O_ID = OWN_ID;
        DBMS_OUTPUT.PUT_LINE('Owner Details - updated successfully');
    COMMIT;
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Owner - record not found ');
    WHEN OWN_PHONE_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('PHONE NUMBER SHOULD BE A NUMBER');
    WHEN OWN_PHONE_LEN_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('PHONE NUMBER SHOULD BE OF 10 DIGITS');
    WHEN OWN_EMAIL_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('EMAIL IS INVALID');
    WHEN OWN_ZIP_LEN_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('ZIPCODE SHOULD BE OF 5 DIGITS');
    WHEN OWN_ZIP_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('ZIPCODE SHOULD BE A NUMBER');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;