create or replace PROCEDURE ADD_CUSTOMERPAYMENT(CP_CUST_ID IN NUMBER,
AMT_PAID IN NUMBER,
PAY_DATE DATE,
PAY_STATUS VARCHAR,
AUTOPAY VARCHAR) 

IS 

MAX_T_ID NUMBER;
NEW_T_ID NUMBER;
CUSTOMER_ID NUMBER;
CUSTOMER_ID_EXCEPTION EXCEPTION;
PAY_STATUS_EXCEPTION EXCEPTION;
AUTOPAY_EXCEPTION EXCEPTION;
AMTPAID_EXCEPTION EXCEPTION;

BEGIN
Select count(*) into CUSTOMER_ID from LEASE where CP_CUST_ID=LEASE.FK_LEASE_C_ID;

SELECT NVL(MAX(T_ID),0) INTO MAX_T_ID FROM CUSTOMER_PAYMENT; 
NEW_T_ID := MAX_T_ID +1; 

IF (CUSTOMER_ID=0) THEN
    RAISE CUSTOMER_ID_EXCEPTION;
ELSIF PAY_STATUS NOT IN ('COMPLETE','PENDING') THEN
    RAISE PAY_STATUS_EXCEPTION;
ELSIF AUTOPAY NOT IN ('Y','N') THEN
    RAISE AUTOPAY_EXCEPTION;
ELSIF is_number(AMT_PAID)=0 THEN
    RAISE AMTPAID_EXCEPTION;
ELSE
INSERT INTO CUSTOMER_PAYMENT(T_ID,FK_CUSTOMER_PAYMENT_C_ID,AMOUNT_PAID,PAYMENT_DATE,PAYMENT_STATUS,AUTOPAYENABLE)
VALUES (NEW_T_ID,CP_CUST_ID,AMT_PAID,PAY_DATE,PAY_STATUS,AUTOPAY);
COMMIT;
END IF;

EXCEPTION
    WHEN CUSTOMER_ID_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('CUSTOMER ID NOT PRESENT IN CUSTOMER TABLE');
    WHEN PAY_STATUS_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('PAYMENT STATUS SHOULD BE COMPLETE OR PENDING');
    WHEN AUTOPAY_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('AUTOPAY SHOULD BE Y OR N');
    WHEN AMTPAID_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('AMOUNT PAID SHOULD BE A NUMBER');
END;