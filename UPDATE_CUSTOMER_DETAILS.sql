create or replace PROCEDURE UPDATE_CUSTOMER_DETAILS(CUST_ID IN NUMBER,
CUST_PHONE IN NUMBER,
CUST_EMAIL varchar,
CUS_STREET VARCHAR,
CUS_CITY VARCHAR,
CUS_STATE VARCHAR,
CUS_ZIP VARCHAR)

IS

CUS_ID_COUNT NUMBER;
CUST_PHONE_EXCEPTION EXCEPTION;
CUST_PHONE_LEN_EXCEPTION EXCEPTION;
CUST_EMAIL_EXCEPTION EXCEPTION;
CUS_ZIP_LEN_EXCEPTION EXCEPTION;
CUS_ZIP_EXCEPTION EXCEPTION;

BEGIN
    Select count(*) into CUS_ID_COUNT from CUSTOMER where CUST_ID=CUSTOMER.C_ID;
    IF CUS_ID_COUNT =0 THEN
        RAISE NO_DATA_FOUND;
    ELSIF is_number(CUST_PHONE)=0 THEN
        RAISE CUST_PHONE_EXCEPTION;
    ELSIF LENGTH(CUST_PHONE)<>10 THEN
        RAISE CUST_PHONE_LEN_EXCEPTION;
    ELSIF not REGEXP_LIKE(CUST_EMAIL, '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$') THEN
        RAISE CUST_EMAIL_EXCEPTION;
    ELSIF LENGTH(CUS_ZIP)<>5 THEN
        RAISE CUS_ZIP_LEN_EXCEPTION;
    ELSIF is_number(CUS_ZIP)=0 THEN
        RAISE CUS_ZIP_EXCEPTION;
    ELSE
        UPDATE CUSTOMER SET C_PHONE = CUST_PHONE, C_EMAIL = CUST_EMAIL, C_STREET=CUS_STREET, C_CITY=CUS_CITY, C_STATE=CUS_STATE, C_ZIPCODE=CUS_ZIP  WHERE CUSTOMER.C_ID = CUST_ID;
        DBMS_OUTPUT.PUT_LINE('Customer Details - updated successfully');
    COMMIT;
    END IF;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Customer - record not found ');
    WHEN CUST_PHONE_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('PHONE NUMBER SHOULD BE A NUMBER');
    WHEN CUST_PHONE_LEN_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('PHONE NUMBER SHOULD BE OF 10 DIGITS');
    WHEN CUST_EMAIL_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('EMAIL IS INVALID');
    WHEN CUS_ZIP_LEN_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('ZIPCODE SHOULD BE OF 5 DIGITS');
    WHEN CUS_ZIP_EXCEPTION THEN
        DBMS_OUTPUT.PUT_LINE('ZIPCODE SHOULD BE A NUMBER');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
END;